@model Sentinel.ViewModels.HomePageViewModel
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnv

@{
    ViewData["Title"] = "Home Page";
}

<div class="d-flex flex-nowrap mb-2">
    <span class="font-italic mr-1">Found</span>
    <span id="count" class="font-italic mr-1"></span>
    <span class="font-italic mr-3">records</span>
    <span class="text-nowrap mr-2">Filter from</span>
    <input type="date" id="min-date" class="form-control form-control-sm mr-2" />
    <span class="mr-2">to</span>
    <input type="date" id="max-date" class="form-control form-control-sm" />
</div>
<div class="d-flex mb-2">
    <select id="applications" class="options-dropdown form-control form-control-sm mr-2">
        <option value="">-- All applications --</option>
        @foreach (var item in Model.applications)
        {
            <option>@item</option>
        }
    </select>
    <select id="agents" class="options-dropdown form-control form-control-sm mr-2">
        <option value="">-- All user agents --</option>
        @foreach (var item in Model.agents)
        {
            <option>@item</option>
        }
    </select>
    <select id="os-list" class="options-dropdown form-control form-control-sm mr-2">
        <option value="">-- All OS --</option>
        @foreach (var item in Model.osList)
        {
            <option>@item</option>
        }
    </select>
    <select id="devices" class="options-dropdown form-control form-control-sm mr-2">
        <option value="">-- All devices --</option>
        @foreach (var item in Model.devices)
        {
            <option>@item</option>
        }
    </select>
    <button id="go-btn" class="btn btn-sm btn-success mr-2">Go</button>
    <button id="reset-btn" class="btn btn-sm btn-warning">Reset</button>
</div>

<div id="error-table">
    <partial name="_partialErrorData.cshtml" for="errors">
</div>

<div class="modal" id="stack-trace-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Stack trace</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <code id="stack-trace-content" class="smaller-text"></code>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @if (hostingEnv.EnvironmentName == "Production")
    {
        <script src="~/lib/vue/vue.min.js"></script>
    }
    else
    {
        <script src="~/lib/vue/vue.js"></script>
    }
    <script src="~/lib/gsap/gsap.min.js"></script>
    <script asp-add-nonce="true">
        function updateCounter() {
            let count = $('tbody tr').length;
            var obj = { current: 0 };
            gsap.to(obj, {
                duration: 1.5,
                current: count,
                onUpdate: function () {
                    $('#count').html(Math.round(obj.current));
                }
            });
        }

        $(function () {
            $('[data-toggle="tooltip"]').tooltip();

            $('[type="date"]').prop('max', function () {
                return new Date().toJSON().split('T')[0];
            });

            updateCounter();

            $('body').on('click', '.view-stack-trace', (event) => {
                let id = $(event.currentTarget).data('id');
                console.log('id=' + id);
                $.get('@Url.Action("GetStackTrace", "Home")/' + id)
                    .done((data) => {
                        $('#stack-trace-content').html(data.stackTrace);
                        $('#stack-trace-modal').modal('show');
                    })
                    .fail((error) => {
                        toastr.error('Error getting stack trace: ' + error);
                    })
            })
            $('#go-btn').click((event) => {
                let appName = $("#applications option:selected").val();
                let userAgent = $("#agents option:selected").val();
                let os = $("#os-list option:selected").val();
                let device = $("#devices option:selected").val();
                $.get('@Url.Action("GetData", "Home")?appName=' + appName
                    + '&userAgent=' + userAgent
                    + '&os=' + os
                    + '&device=' + device
                    + '&minDate=' + $('#min-date').val()
                    + '&maxDate=' + $('#max-date').val()
                )
                    .done((data) => {
                        $('#error-table').html(data);
                        updateCounter();
                    })
                    .fail((error) => {
                        console.dir(error);
                        toastr.error('Error getting data: ' + error.responseText);
                    })
            })
            $('#reset-btn').click((event) => {
                $('.options-dropdown').val('');
                $('#min-date').val('');
                $('#max-date').val('');
            })
        })
    </script>
}
